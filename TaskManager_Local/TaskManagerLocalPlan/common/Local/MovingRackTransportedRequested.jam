PREFIXES:
		PREFIX isro: <http://www.arbi.com//BuiltInPlan#>;
		
PLAN CONCLUDE PostMovingRackTransportedRequestedTo($worker,$goalID ,$goal) {
	ID: "http://www.arbi.com//BuiltInPlan#PostMovingRackTransportedRequestedTo"
	PRECONDITION:
	BODY:
		RETRACT PostMovingRackTransportedRequestedTo($worker,$goalID , $goal);
		POST ACHIEVE MovingRackTransportedRequestedTo($worker,$goalID , $goal);
}

PLAN ACHIEVE MovingRackTransportedRequestedTo($worker, $goalID, $goal){
	ID: "http://www.arbi.com//MovingRackTransportedRequestedTo"
	PRECONDITION:
		FACT Communication($communicationInstance);
		FACT isro:ReasonerAddress($reasoner);
		
	BODY:
		PERFORM isro:startLog("ACHIEVE", "MovingRackTransportedRequestedTo");
		
		PERFORM TaskCreated($goalID, $goal);
		PERFORM RequestTaskAllocation($goal, $allocation);
		PERFORM FindWorker($allocation, $worker);
		PERFORM GoalAssign($goal, $worker);
		
		$communicationInstance.inform($reasoner, "(goalComplete (MovingRackTransportedRequestedTo " + $worker + " " + $goalID + " " + $goal + "))");
		PERFORM isro:endLog("ACHIEVE", "MovingRackTransportedRequestedTo");
	UTILITY: 1; 
}

PLAN CONCLUDE MovingRackTransportedReportedFrom($worker, $goalID, $goal){
	ID: "http://www.arbi.com//MovingRackTransportedReportedFrom"
	PRECONDITION:
		FACT Communication($communicationInstance);
		FACT isro:ReasonerAddress($reasoner);
		
	BODY:
		PERFORM isro:startLog("CONCLUDE", "MovingRackTransportedRequestedTo");
		
		System.out.println("Reported Goal : " + $goal);
				
		$communicationInstance.inform($reasoner, "(goalComplete (MovingRackTransportedReportedFrom " + $worker + " " + $goalID + " " + $goal + "))");
		PERFORM isro:endLog("CONCLUDE", "MovingRackTransportedRequestedTo");
	UTILITY: 1; 
}

PLAN PERFORM RequestTaskAllocation($goal, $allocation){
	ID: "http://www.arbi.com//RequestTaskAllocationMovingRack"
	PRECONDITION:
		FACT Communication($communicationInstance);
		FACT ExtraUtility($helper);
		FACT isro:TaskAllocatorAddress($allocator);
		
	BODY:
		PERFORM isro:startLog("PERFORM", "RequestTaskAllocation");
		
		$goalID = $glUtility.retrieveGLExpression($goal,0);
		$goalID = $glUtility.retrieveGLExpression($goalID,0);
		$startStation = $glUtility.retrieveGLExpression($goal,2);
		$startStation = $glUtility.retrieveGLExpression($startStation,1);
		$message = "(" +  $glUtility.retrieveGLExpression($goal,1) + " \"" + $goalID + "\" \"" + $startStation + "\")";
		
		$result = $communicationInstance.request($allocator, "(TaskAllocation "+ $message+")");
		
		PERFORM WaitAllocation($allocation);
		
		PERFORM isro:endLog("PERFORM", "RequestTaskAllocation");
	UTILITY: 1; 
}

PLAN PERFORM TaskCreated($goaID, $goal){
	ID: "http://www.arbi.com//GenerateMovingRackTransported"
	PRECONDITION:
		FACT Communication($communicationInstance);
		FACT ExtraUtility($helper);
		FACT isro:ReasonerAddress($reasoner);
		FACT GoalRequested($requestedGoalID, "CargoStoringPrepared",$requestedGoal);
		FACT GLUtility($glUtility);
		
	BODY:
		$goalID = $helper.getGoalID("Local");
		
		PERFORM QueryIdleMovingRack($rack);
		PERFORM QueryOnStation($startStation, $rack);
		$endStation = $glUtility.retrieveGLExpression($requestedGoal, 0);
		
		$goal = "(goal (metadata \"" +$goalID +"\") \"MovingRackTransported\" (argument \"" +$rack+ "\" \"" + $startStation + "\" \"" + $endStation + "\"))";
	UTILITY: 1; 
}



PLAN PERFORM QueryIdleMovingRack($rack){
	ID: "http://www.arbi.com//queryContextIdleMovingRack"
	PRECONDITION:
		FACT Communication($communicationInstance);
		FACT ExtraUtility($helper);
		FACT isro:ContextManagerAddress($address);
		FACT GLUtility($glUtility);
		
	BODY:
		$queryResult = $communicationInstance.sendQuery($address, "(context (IdleMovingRack $rack))");
		$context = $glUtility.retrieveGLExpression($queryResult, 0);
		System.out.println($context);
		$rack = $glUtility.retrieveGLExpression($context, 0);
	UTILITY: 1; 
}
