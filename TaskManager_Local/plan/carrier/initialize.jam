PLAN PERFORM initialize() {
	ID : "initializeForLift"
	PRECONDITION :
	BODY :
		RETRIEVE TaskManager($tm);
		System.out.println("---initialize---");
		
		$subscribeRule = "(rule (fact (context $context)) --> (notify (context $context)))";
		$result = $tm.subscribe($subscribeRule);		
		System.out.println($result);
		
		$subscribeRule = "(rule (fact (robotPosition $a $b $c)) --> (notify (context (robotPosition $a $b $c))))";
		$tm.subscribe($subscribeRule);		
		$subscribeRule = "(rule (fact (robotLoading $a $b)) --> (notify (context (robotLoading $a $b))))";
		$tm.subscribe($subscribeRule);		
		$subscribeRule = "(rule (fact (robotDegree $a $b)) --> (notify (context (robotDegree $a $b))))";
		$tm.subscribe($subscribeRule);		
		$subscribeRule = "(rule (fact (robotStatus $a $b)) --> (notify (context (robotStatus $a $b))))";
		$tm.subscribe($subscribeRule);		
		$subscribeRule = "(rule (fact (batteryRemain $a $b)) --> (notify (context (batteryRemain $a $b))))";
		$tm.subscribe($subscribeRule);		
		
		System.out.println("---start ChannelInit---");
		
		PERFORM connectAgentChannel("logistic",$channel);
		
		ASSERT Channel($channelName, $channel);
		
		System.out.println("---end ChannelInit---");
		
		RETRIEVE isro:agent($agent);
		System.out.println($agent);
		PERFORM initializeContext($agent);
		
		PERFORM inform("logistic", "agent://www.mcarbi.com/SemanticMapManager", "(hi)");
	UTILITY : 10000;
}

